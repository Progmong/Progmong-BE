# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD with Gradle and EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      
    - name: Create application.properties
      run: |
        echo "${{ secrets.APP_PROPS }}" > src/main/resources/application.properties
  
    - name: Check contents of application.properties
      run: cat ./src/main/resources/application.properties

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew  

    - name: Build project (skip tests)
      run: ./gradlew build -x test

    - name: Deploy to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        source: "build/libs/*.jar"
        target: "~/app"

    - name: SSH & Restart App
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          pkill -f 'java -jar' || true
          cd ~/app/build/libs || exit 1
          nohup java -jar progmong-0.0.1-SNAPSHOT.jar > nohup.out 2>&1 &
          exit 0

